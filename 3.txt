#include "Arduino.h"
#include "LTimer.h"
#include "DHT.h"
#define DHTPIN 2
#define DHTTYPE DHT11
#define _SSID  "CAT S61_4246" 
#define _KEY   "bvf125472"  
#include <LWiFi.h>
#include <WiFiClient.h>
#include "MCS.h"
MCSDevice mcs("DZQBxguH","htzG59k7SZx7Zxyj");
//LTimer timer0(LTIMER_0);
DHT dht(DHTPIN, DHTTYPE);
LTimer timer1(LTIMER_1);
MCSDisplayFloat  ch1("ch1");
MCSDisplayFloat  ch2("ch2");


float h,t,f;
void _callback1(void *usr_data)
{ 
  // Check if any reads failed and exit early (to try again).
  
  if (isnan(h) || isnan(t) ) {
    Serial.println(F("Failed to read from DHT sensor!"));
    return;
  }
  Serial.print(F("Humidity: "));
  Serial.print(h);
  Serial.print(F("%  Temperature: "));
  Serial.print(t);
  Serial.print(F("C "));
  Serial.print("\n");
 

 
 
}




void setup() {
  Serial.begin(9600); 
  Serial.println(F("DHTxx test!"));
   while(WL_CONNECTED != WiFi.status())
  {
    Serial.print("WiFi.begin(");
    Serial.print(_SSID);
    Serial.print(",");
    Serial.print(_KEY);
    Serial.println(")...");
    WiFi.begin(_SSID, _KEY);
  }
  Serial.println("WiFi connected !!");

  // setup MCS connection
  mcs.addChannel(ch1);
  mcs.addChannel(ch2);

  while(!mcs.connected())
  {
    Serial.println("MCS.connect()...");
    mcs.connect();
  }
  Serial.println("MCS connected !!");
  dht.begin();
  timer1.begin();
  timer1.start(1000,LTIMER_REPEAT_MODE,_callback1,NULL);

}

void loop() {
  h = dht.readHumidity();
  // Read temperature as Celsius (the default)
 t = dht.readTemperature();

 if(!ch1.set(h))
    {
      Serial.print("Failed to update remote"); 
    }
  
    if(!ch2.set(t))
    {
      Serial.print("Failed to update remote");
    }
  
}